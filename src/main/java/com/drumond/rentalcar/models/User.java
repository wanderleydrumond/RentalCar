package com.drumond.rentalcar.models;

import com.drumond.rentalcar.enums.Role;
import com.drumond.rentalcar.enums.converters.RoleConverter;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.UUID;

/**
 * User information type that backend consumes and produces.
 *
 * @author Wanderley Drumond
 */
@NoArgsConstructor
@AllArgsConstructor
@Getter
@Setter
@Entity
@Table(name = "users")
public class User {
    /**
     * User identification in database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Long id;
    /**
     * Indicates if a user is logged or not.
     *
     * @see <a href= "https://www.codementor.io/@petrepopescu/how-to-use-string-uuid-in-hibernate-with-mysql-1jrhjh6ef5">How to use String UUID in Hibernate with MySQL</a>
     */
    private UUID token;
    /**
     * The name of the user.
     */
    @NotNull
    private String name;
    /**
     * The username. Automatically generated by the system according to the urser role.
     * E.g.: CLI_001 for the first client, EMP_001 for the first employee, MAN_002 for the second manager etc
     */
    @NotNull
    @Column(unique = true, updatable = false)
    private String code;
    private String password;
    /**
     * Used to determine the permissions a user has in the system.
     */
    @Convert(converter = RoleConverter.class)
    private Role role;
}